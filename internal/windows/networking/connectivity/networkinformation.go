// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package connectivity

import (
	"syscall"
	"unsafe"

	"github.com/StorkKershaw/hound/internal/windows/foundation"
	"github.com/go-ole/go-ole"
)

const GUIDiNetworkInformationStatics string = "5074f851-950d-4165-9c15-365619481eea"
const SignatureiNetworkInformationStatics string = "{5074f851-950d-4165-9c15-365619481eea}"

type iNetworkInformationStatics struct {
	ole.IInspectable
}

type iNetworkInformationStaticsVtbl struct {
	ole.IInspectableVtbl

	NetworkInformationGetConnectionProfiles        uintptr
	NetworkInformationGetInternetConnectionProfile uintptr
	NetworkInformationGetLanIdentifiers            uintptr
	NetworkInformationGetHostNames                 uintptr
	NetworkInformationGetProxyConfigurationAsync   uintptr
	NetworkInformationGetSortedEndpointPairs       uintptr
	NetworkInformationAddNetworkStatusChanged      uintptr
	NetworkInformationRemoveNetworkStatusChanged   uintptr
}

func (v *iNetworkInformationStatics) VTable() *iNetworkInformationStaticsVtbl {
	return (*iNetworkInformationStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func NetworkInformationGetInternetConnectionProfile() (*ConnectionProfile, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Networking.Connectivity.NetworkInformation", ole.NewGUID(GUIDiNetworkInformationStatics))
	if err != nil {
		return nil, err
	}
	v := (*iNetworkInformationStatics)(unsafe.Pointer(inspectable))

	var out *ConnectionProfile
	hr, _, _ := syscall.SyscallN(
		v.VTable().NetworkInformationGetInternetConnectionProfile,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out ConnectionProfile
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func NetworkInformationAddNetworkStatusChanged(networkStatusHandler *NetworkStatusChangedEventHandler) (foundation.EventRegistrationToken, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Networking.Connectivity.NetworkInformation", ole.NewGUID(GUIDiNetworkInformationStatics))
	if err != nil {
		return foundation.EventRegistrationToken{}, err
	}
	v := (*iNetworkInformationStatics)(unsafe.Pointer(inspectable))

	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().NetworkInformationAddNetworkStatusChanged,
		uintptr(unsafe.Pointer(v)),                    // this
		uintptr(unsafe.Pointer(networkStatusHandler)), // in NetworkStatusChangedEventHandler
		uintptr(unsafe.Pointer(&out)),                 // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func NetworkInformationRemoveNetworkStatusChanged(eventCookie foundation.EventRegistrationToken) error {
	inspectable, err := ole.RoGetActivationFactory("Windows.Networking.Connectivity.NetworkInformation", ole.NewGUID(GUIDiNetworkInformationStatics))
	if err != nil {
		return err
	}
	v := (*iNetworkInformationStatics)(unsafe.Pointer(inspectable))

	hr, _, _ := syscall.SyscallN(
		v.VTable().NetworkInformationRemoveNetworkStatusChanged,
		uintptr(unsafe.Pointer(v)),            // this
		uintptr(unsafe.Pointer(&eventCookie)), // in foundation.EventRegistrationToken
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}
